import java.time.LocalDateTime
import java.time.format.DateTimeFormatter

buildscript {
    repositories {
        jcenter()
        mavenCentral()
        google()
        maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
        maven { url 'https://repo.huaweicloud.com/repository/maven/' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/central/' }
    }
}

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.4.30'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.4.30'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
    id("com.github.gmazzo.buildconfig") version("2.0.2")
}

def mainClass = 'io.github.starwishsama.comet.CometApplication'
def miraiVersion = '2.5.0-dev-1'

jar {
    manifest {
        attributes 'Main-Class': mainClass
        attributes 'Author': "StarWishsama"
    }
}

String branchName = 'git symbolic-ref --short -q HEAD'.execute().text.trim()
String gitBranchName = "-" + (branchName == null && branchName.isEmpty() ? "Unknown" : branchName)
String gitCommitId = "-" + 'git rev-parse --short HEAD'.execute().text.trim()
String versionCode = "0.6.1" + gitBranchName + gitCommitId

group 'io.github.starwishsama.comet'
version versionCode

tasks {
    buildConfig {
        println "Processing version code and other stuffs....."

        packageName("io.github.starwishsama.comet")
        buildConfigField("String", "version", "\"${versionCode}\"")
        buildConfigField("String", "buildTime", "\"${LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss"))}\"")
        buildConfigField("String", "miraiVersion", "\"$miraiVersion\"")
    }
}

repositories {
    maven { url 'https://repo.huaweicloud.com/repository/maven/' }
    maven { url 'http://maven.aliyun.com/nexus/content/repositories/central/' }
    maven { url 'https://jitpack.io' }
    maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    jcenter()
    mavenCentral()
    google()
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-core:1.1.0'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    implementation("net.mamoe:mirai-core-all:$miraiVersion")

    implementation 'cn.hutool:hutool-http:5.5.8'
    implementation 'cn.hutool:hutool-crypto:5.5.8'

    implementation 'org.apache.commons:commons-lang3:3.11'
    implementation 'org.apache.commons:commons-io:1.3.2'

    implementation 'com.google.code.gson:gson:2.8.6'
    // yamlkt @ https://github.com/him188/yamlkt
    implementation("net.mamoe.yamlkt:yamlkt:0.9.0-dev-1")
    // kotson @ https://github.com/SalomonBrys/Kotson
    implementation 'com.github.salomonbrys.kotson:kotson:2.5.0'

    // CUrl
    implementation 'com.github.rockswang:java-curl:1.2.2.190107'

    // BiliBili-Api @ https://github.com/czp3009/bilibili-api
    api 'com.hiczp:bilibili-api:0.1.3'

    // jsoup HTML parser library @ https://jsoup.org/
    implementation 'org.jsoup:jsoup:1.13.1'

    // Retrofit A type-safe HTTP client for Android and Java @ https://github.com/square/retrofit/
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'

    // RomeTool for RSS @ https://github.com/rometools/rome
    implementation 'com.rometools:rome:1.15.0'
    implementation 'com.rometools:rome-utils:1.15.0'
    implementation 'com.rometools:rome-fetcher:1.15.0'

    // Selenium WebDriver @ https://www.selenium.dev/
    //implementation 'org.seleniumhq.selenium:selenium-java:3.141.59'

    // Jline a Java library for handling console input @ https://github.com/jline/jline3
    implementation 'org.jline:jline:3.19.0'

    // Jansi needed by JLine
    implementation 'org.fusesource.jansi:jansi:2.3.1'

    // DNSJava used to srv lookup
    implementation 'dnsjava:dnsjava:3.3.1'
}

shadowJar {
    dependsOn(generateBuildConfig)
    zip64 true
}

compileKotlin {
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
        freeCompilerArgs = ["-Xopt-in=kotlin.RequiresOptIn", "-XXLanguage:+InlineClasses"]
    }
}
